# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        python -m pip install poetry

    - name: Configure poetry
      run: |
        poetry config virtualenvs.in-project true

    - name: Cache the virtualenv
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry install

    - name: Type check
      run: |
        poetry run mypy .

    - name: Lint
      run: |
        poetry run flake8 ./example ./repli ./tests --config ./.flake8

    - name: Test and coverage
      run: |
        poetry run coverage run -m pytest && poetry run coverage report -m
